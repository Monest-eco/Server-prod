version: '3'

services:
  mn-server-mqtt:
    build: .
    container_name: mn-server-mqtt
    image: mn-server-mqtt
    depends_on:
      - postgres
    links:
      - postgres
    ports:
      - "8085:8080"
    volumes:
      - .:/app
    environment:
      PORT: 8080
      STATUS: "prod"
      TYPE: "mqtt"
    command: "yarn start"
  
  mn-server-http:
    build: .
    container_name: mn-server-http
    image: mn-server-http
    depends_on:
      - postgres
    links:
      - postgres
    ports:
      - "8080:8080"
    volumes:
      - .:/app
    environment:
      PORT: 8080
      STATUS: "prod"
    command: "yarn start"

  pgadmin:
    image: dpage/pgadmin4:4.28
    depends_on:
      - postgres
    links:
      - postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5432"]
      interval: 30s
      timeout: 10s
      retries: 5
    ports:
      - "5432:5432"
    env_file:
      - .env # configure postgres
    volumes:
      - database-data:/var/lib/postgresql/data # persist data
      - ./sql/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql # create tables
      - ./sql/fill_tables.sql:/docker-entrypoint-initdb.d/fill_tables.sql # fill tables

volumes:
  database-data: